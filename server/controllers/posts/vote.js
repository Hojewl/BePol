import * as postAnswerRepository from "../../models/postAnswer.js";
import * as postRepository from "../../models/post.js";

export const voteToPost = async (req, res, next) => {
    /**
     * Í∏∞Îä•: Î∞úÏùòÎ¨∏ Ï∞¨Î∞òÌà¨Ìëú & Ìà¨Ìëú Ï∑®ÏÜå Í∏∞Îä•
     * ÏûëÏÑ±Ïûê: Ïù¥ÏäπÏó∞
     * üìå Ìà¨Ìëú Í∏∞Îä• ‚úîÔ∏é
     * üìå Ìà¨Ìëú Ï∑®ÏÜå Í∏∞Îä• ‚úîÔ∏é
     * postAnswerÏóê Ïù¥ÎØ∏ Ï∞¨ÏÑ±Ïù¥ÎÇò Î∞òÎåÄÎ•º ÎàÑÎ•∏ Ïú†Ï†Ä o (user_id ÎπÑÍµê)
     * >> Í∞ôÏùÄÍ±∞(Ï∞¨ÏÑ± -> Ï∞¨ÏÑ±) ÌïúÎ≤à Îçî ÎàÑÎ•¥Î©¥ Ï∑®ÏÜå ‚úîÔ∏é
     * >> Î∞òÎåÄÍ±∞(Ï∞¨ÏÑ± -> Î∞òÎåÄ) ÌïúÎ≤à Îçî ÎàÑÎ•¥Î©¥ Î≥ÄÍ≤Ω ‚úîÔ∏é
     * üìå Í≤åÏãúÎ¨º agrees, disagrees Î∞òÏòÅ
     */

    /**
     * agree === false -> Î∞òÎåÄ
     * agree === true -> Ï∞¨ÏÑ±
     */
    const { agree } = req.body;
    const { accesstoken } = req.headers;
    const { postId } = req.params;
    const userId = "62e1eb6f6cc8d5e6d3bfac2d"; // ÏÜåÏÖúÎ°úÍ∑∏Ïù∏ Íµ¨ÌòÑÎêòÎ©¥ Î≥ÄÍ≤Ω

    if (!accesstoken) { // ÏÜåÏÖúÎ°úÍ∑∏Ïù∏ Íµ¨ÌòÑÎêòÎ©¥ Î≥ÄÍ≤Ω
        res.status(401).json({
            message: "Unauthorized user",
        });
    }

    const userIdAnswered = await postAnswerRepository.getUserIdAnswered(userId, agree);

    if (userIdAnswered) { // Ïû¨Ìà¨Ìëú
        if (userIdAnswered.answer === agree) { // Í∞ôÏùÄÍ±∞ Îòê ÎàÑÎ•∏ Í≤ΩÏö∞ (Ï∞¨ÏÑ± -> Ï∞¨ÏÑ±)            
            await postAnswerRepository.deleteAnswer(userId);
            await (
                agree === true ?
                postRepository.substractAgrees(postId) :
                postRepository.substractDisagrees(postId)
            );
            return res.sendStatus(204);
        } else { // Îã§Î•∏ Í±∞ Îòê ÎàÑÎ•∏ Í≤ΩÏö∞ (Ï∞¨ÏÑ± -> Î∞òÎåÄ)
            const changedAnswer = await postAnswerRepository.changeAnswer(agree, userId);

            if (changedAnswer) {
                await (
                    agree === true ?
                    postRepository.substractDisagrees(postId) :
                    postRepository.substractAgrees(postId)
                );
                await (
                    agree === true ?
                    postRepository.addAgrees(postId) :
                    postRepository.addDisagrees(postId)
                );

                return res.status(201).json({
                    message: "Vote is changed to the other option successfully",
                    agree: changedAnswer.answer
                })
            }
        }
    } else { // Ï≤´ Ìà¨Ìëú
        const data = await postAnswerRepository.addAnswer(postId, userId, agree);

        if (data) {
            // post collection - agrees, disagrees Ï†ÅÏö©
            await (
                agree === true ?
                postRepository.addAgrees(postId) :
                postRepository.addDisagrees(postId)
            );
    
            return res.status(201).json({
                message: "Voted successfully",
                "agree": data.answer,
            });
        }
    }
}